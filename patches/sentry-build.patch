--- a/setup.cfg
+++ b/setup.cfg
@@ -109,7 +109,7 @@ extension =
     S=tools.flake8_plugin:SentryCheck
 
 [bdist_wheel]
-python-tag = py38
+python-tag = py311
 
 [coverage:run]
 omit =
--- a/setup.py
+++ b/setup.py
@@ -86,7 +86,7 @@ def get_requirements(env):
 # Only include dev requirements in non-binary distributions as we don't want these
 # to be listed in the wheels. Main reason for this is being able to use git/URL dependencies
 # for development, which will be rejected by PyPI when trying to upload the wheel.
-extras_require = {"rabbitmq": ["amqp==2.6.1"]}
+extras_require = {"rabbitmq": ["amqp==5.0.9"]}
 if not sys.argv[1:][0].startswith("bdist"):
     extras_require["dev"] = get_requirements("dev-frozen")
 
--- a/src/sentry/utils/distutils/commands/base.py
+++ b/src/sentry/utils/distutils/commands/base.py
@@ -122,7 +122,7 @@ class BaseBuildCommand(Command):
 
         if node_version[2] is not None:
             log.info(f"using node ({node_version})")
-            self._run_command(["yarn", "install", "--production", "--frozen-lockfile", "--quiet"])
+            self._run_command(["yarn", "install", "--production", "--frozen-lockfile"])
 
     def _run_command(self, cmd, env=None):
         cmd_str = " ".join(cmd)
